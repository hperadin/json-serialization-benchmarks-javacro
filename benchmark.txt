# Run progress: 0.00% complete, ETA 00:01:15
# VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
# VM options: <none>
# Fork: 1 of 1
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.javacro.benchmarks.JsonSerializationBenchmarks.baseline
# Warmup Iteration   1: n = 20328, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
# Warmup Iteration   2: n = 10463, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
# Warmup Iteration   3: n = 16594, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
# Warmup Iteration   4: n = 16586, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
# Warmup Iteration   5: n = 16575, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   1: n = 16556, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   2: n = 16565, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   3: n = 16591, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   4: n = 16591, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   5: n = 16637, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   6: n = 16694, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   7: n = 16582, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   8: n = 16642, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration   9: n = 16666, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op
Iteration  10: n = 16655, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 0, 0 ms/op

Run result : 
    samples = 166179
        mean =      0.000 ±(99.9%) 0.000 ms/op
         min =      0.000 ms/op
  p( 0.0000) =      0.000 ms/op
  p(50.0000) =      0.000 ms/op
  p(90.0000) =      0.000 ms/op
  p(95.0000) =      0.000 ms/op
  p(99.0000) =      0.000 ms/op
  p(99.9000) =      0.000 ms/op
  p(99.9900) =      0.000 ms/op
  p(99.9990) =      0.001 ms/op
  p(99.9999) =      0.003 ms/op
         max =      0.003 ms/op


# Run progress: 20.00% complete, ETA 00:01:02
# VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
# VM options: <none>
# Fork: 1 of 1
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.javacro.benchmarks.JsonSerializationBenchmarks.timeJacksonAfterBurner
# Warmup Iteration   1: n = 3449, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 1, 3, 4, 151, 151 ms/op
# Warmup Iteration   2: n = 9746, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   3: n = 12430, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   4: n = 13305, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
# Warmup Iteration   5: n = 13313, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   1: n = 13224, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   2: n = 13227, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   3: n = 13305, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   4: n = 13193, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 5 ms/op
Iteration   5: n = 12845, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 10, 13 ms/op
Iteration   6: n = 13203, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   7: n = 13278, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 3, 4 ms/op
Iteration   8: n = 13132, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   9: n = 13126, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration  10: n = 13294, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op

Run result : 
    samples = 131827
        mean =      0.076 ±(99.9%) 0.000 ms/op
         min =      0.073 ms/op
  p( 0.0000) =      0.073 ms/op
  p(50.0000) =      0.075 ms/op
  p(90.0000) =      0.075 ms/op
  p(95.0000) =      0.076 ms/op
  p(99.0000) =      0.089 ms/op
  p(99.9000) =      0.146 ms/op
  p(99.9900) =      1.362 ms/op
  p(99.9990) =     10.139 ms/op
  p(99.9999) =     12.501 ms/op
         max =     12.501 ms/op


# Run progress: 40.00% complete, ETA 00:00:47
# VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
# VM options: <none>
# Fork: 1 of 1
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.javacro.benchmarks.JsonSerializationBenchmarks.timeJacksonStreaming
# Warmup Iteration   1: n = 5772, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 1, 1, 3, 74, 74 ms/op
# Warmup Iteration   2: n = 13044, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   3: n = 14124, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 3, 4 ms/op
# Warmup Iteration   4: n = 14972, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
# Warmup Iteration   5: n = 14795, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   1: n = 14963, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
Iteration   2: n = 14950, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   3: n = 14888, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
Iteration   4: n = 14963, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   5: n = 14835, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   6: n = 14741, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   7: n = 14786, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
Iteration   8: n = 14795, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   9: n = 14816, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration  10: n = 14862, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 3 ms/op

Run result : 
    samples = 148599
        mean =      0.067 ±(99.9%) 0.000 ms/op
         min =      0.065 ms/op
  p( 0.0000) =      0.065 ms/op
  p(50.0000) =      0.066 ms/op
  p(90.0000) =      0.067 ms/op
  p(95.0000) =      0.068 ms/op
  p(99.0000) =      0.090 ms/op
  p(99.9000) =      0.130 ms/op
  p(99.9900) =      1.307 ms/op
  p(99.9990) =      2.466 ms/op
  p(99.9999) =      2.994 ms/op
         max =      2.994 ms/op


# Run progress: 60.00% complete, ETA 00:00:31
# VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
# VM options: <none>
# Fork: 1 of 1
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.javacro.benchmarks.JsonSerializationBenchmarks.timeJacksonVulgaris
# Warmup Iteration   1: n = 3545, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 1, 3, 4, 150, 150 ms/op
# Warmup Iteration   2: n = 9104, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   3: n = 11335, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   4: n = 11938, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
# Warmup Iteration   5: n = 11976, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
Iteration   1: n = 11988, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   2: n = 11961, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   3: n = 11970, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   4: n = 11951, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   5: n = 11950, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   6: n = 11885, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   7: n = 11914, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   8: n = 11977, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   9: n = 11866, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration  10: n = 11721, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op

Run result : 
    samples = 119183
        mean =      0.084 ±(99.9%) 0.000 ms/op
         min =      0.082 ms/op
  p( 0.0000) =      0.082 ms/op
  p(50.0000) =      0.083 ms/op
  p(90.0000) =      0.083 ms/op
  p(95.0000) =      0.085 ms/op
  p(99.0000) =      0.098 ms/op
  p(99.9000) =      0.162 ms/op
  p(99.9900) =      1.451 ms/op
  p(99.9990) =      2.094 ms/op
  p(99.9999) =      2.118 ms/op
         max =      2.118 ms/op


# Run progress: 80.00% complete, ETA 00:00:15
# VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
# VM options: <none>
# Fork: 1 of 1
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.javacro.benchmarks.JsonSerializationBenchmarks.timeManualJsonStreaming
# Warmup Iteration   1: n = 7351, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 1, 4, 65, 65 ms/op
# Warmup Iteration   2: n = 13473, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 4, 4 ms/op
# Warmup Iteration   3: n = 13549, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op
# Warmup Iteration   4: n = 14772, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
# Warmup Iteration   5: n = 14644, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   1: n = 14822, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   2: n = 14794, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   3: n = 14789, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   4: n = 14692, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   5: n = 14809, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   6: n = 14754, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 2 ms/op
Iteration   7: n = 14685, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration   8: n = 14731, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 2, 3 ms/op
Iteration   9: n = 14721, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 1 ms/op
Iteration  10: n = 14671, mean = 0 ms/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 0, 0, 0, 0, 0, 0, 1, 2 ms/op

Run result : 
    samples = 147468
        mean =      0.068 ±(99.9%) 0.000 ms/op
         min =      0.065 ms/op
  p( 0.0000) =      0.065 ms/op
  p(50.0000) =      0.067 ms/op
  p(90.0000) =      0.067 ms/op
  p(95.0000) =      0.068 ms/op
  p(99.0000) =      0.077 ms/op
  p(99.9000) =      0.130 ms/op
  p(99.9900) =      1.247 ms/op
  p(99.9990) =      2.475 ms/op
  p(99.9999) =      3.076 ms/op
         max =      3.076 ms/op


Benchmark                                                     Mode   Samples         Mean   Mean error    Units
c.j.b.JsonSerializationBenchmarks.baseline                  sample    166179        0.000        0.000    ms/op
c.j.b.JsonSerializationBenchmarks.timeJacksonAfterBurner    sample    131827        0.076        0.000    ms/op
c.j.b.JsonSerializationBenchmarks.timeJacksonStreaming      sample    148599        0.067        0.000    ms/op
c.j.b.JsonSerializationBenchmarks.timeJacksonVulgaris       sample    119183        0.084        0.000    ms/op
c.j.b.JsonSerializationBenchmarks.timeManualJsonStreaming   sample    147468        0.068        0.000    ms/op
